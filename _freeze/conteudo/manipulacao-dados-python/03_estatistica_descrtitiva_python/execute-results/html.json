{
  "hash": "d2bd96fd8d046afc315f8e802bc40ca7",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Estatística Descritiva e Visualização com Python\"\ndescription: \"Análise descritiva de dados usando Python com Pandas e Matplotlib, incluindo medidas de tendência central, dispersão e visualizações básicas.\"\n\nimage: \"images/estatistica-descritiva-python.png\"\nexecute:\n  echo: true\n  warning: false\n  include: true\n  message: false\n---\n\n\nNeste tutorial, exploraremos como realizar análise estatística descritiva em Python, utilizando o dataset de [pinguins de Palmer](https://allisonhorst.github.io/palmerpenguins/index.html}{target=\"_blank\"} para exemplificar conceitos fundamentais de estatística.\n\n::: {.callout-tip title=\"Código em Python\"}\n\nAcompanha este tutorial o [Estatística descritiva em Python](03_estatistica_descrtitiva_python.py){target=\"_blank\"}\n\n:::\n\n## Pacotes necessários\n\n::: {#44d6bd26 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nfrom palmerpenguins import load_penguins\nimport matplotlib.pyplot as plt\n```\n:::\n\n\n## Carregando e preparando os dados\n\n::: {#cde9be46 .cell execution_count=2}\n``` {.python .cell-code}\npenguins = load_penguins().dropna()  # Remove valores ausentes\npenguins.shape  # Verificar dimensões\n```\n\n::: {.cell-output .cell-output-display execution_count=24}\n```\n(333, 8)\n```\n:::\n:::\n\n\n## Variáveis Qualitativas (Categóricas)\n\n### Identificando tipos de dados\n\n::: {#dea19fe6 .cell execution_count=3}\n``` {.python .cell-code}\npenguins.dtypes\n```\n\n::: {.cell-output .cell-output-display execution_count=25}\n```\nspecies               object\nisland                object\nbill_length_mm       float64\nbill_depth_mm        float64\nflipper_length_mm    float64\nbody_mass_g          float64\nsex                   object\nyear                   int64\ndtype: object\n```\n:::\n:::\n\n\n### Frequência absoluta\n\n::: {#78d7d67a .cell execution_count=4}\n``` {.python .cell-code}\npenguins['species'].value_counts()\n```\n\n::: {.cell-output .cell-output-display execution_count=26}\n```\nspecies\nAdelie       146\nGentoo       119\nChinstrap     68\nName: count, dtype: int64\n```\n:::\n:::\n\n\n### Frequência relativa\n\n::: {#5cdeb8b5 .cell execution_count=5}\n``` {.python .cell-code}\npenguins['species'].value_counts(normalize=True)\n```\n\n::: {.cell-output .cell-output-display execution_count=27}\n```\nspecies\nAdelie       0.438438\nGentoo       0.357357\nChinstrap    0.204204\nName: proportion, dtype: float64\n```\n:::\n:::\n\n\n### Visualização: Gráfico de barras\n\n::: {#d93c74ce .cell execution_count=6}\n``` {.python .cell-code}\npenguins['species'].value_counts().plot(kind='bar')\nplt.title(\"Número de Pinguins por Espécie\")\nplt.xlabel(\"Espécie\")\nplt.ylabel(\"Frequência\")\nplt.show()\nplt.close('all')\n```\n\n::: {.cell-output .cell-output-display}\n![](03_estatistica_descrtitiva_python_files/figure-html/cell-7-output-1.png){width=594 height=502}\n:::\n:::\n\n\n::: {#19122b84 .cell execution_count=7}\n``` {.python .cell-code}\n# Para outra variável categórica\npenguins['island'].value_counts().plot(kind='bar')\nplt.title(\"Distribuição de Pinguins por Ilha\")\nplt.xlabel(\"Ilha\")\nplt.ylabel(\"Frequência\")\nplt.show()\nplt.close('all')\n```\n\n::: {.cell-output .cell-output-display}\n![](03_estatistica_descrtitiva_python_files/figure-html/cell-8-output-1.png){width=594 height=502}\n:::\n:::\n\n\n## Variáveis Quantitativas\n\n### Resumo descritivo básico\n\n::: {#e57718b5 .cell execution_count=8}\n``` {.python .cell-code}\npenguins['body_mass_g'].describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=30}\n```\ncount     333.000000\nmean     4207.057057\nstd       805.215802\nmin      2700.000000\n25%      3550.000000\n50%      4050.000000\n75%      4775.000000\nmax      6300.000000\nName: body_mass_g, dtype: float64\n```\n:::\n:::\n\n\n::: {#c5472177 .cell execution_count=9}\n``` {.python .cell-code}\n# Para todas as variáveis numéricas\npenguins.describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=31}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>bill_length_mm</th>\n      <th>bill_depth_mm</th>\n      <th>flipper_length_mm</th>\n      <th>body_mass_g</th>\n      <th>year</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>333.000000</td>\n      <td>333.000000</td>\n      <td>333.000000</td>\n      <td>333.000000</td>\n      <td>333.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>43.992793</td>\n      <td>17.164865</td>\n      <td>200.966967</td>\n      <td>4207.057057</td>\n      <td>2008.042042</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>5.468668</td>\n      <td>1.969235</td>\n      <td>14.015765</td>\n      <td>805.215802</td>\n      <td>0.812944</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>32.100000</td>\n      <td>13.100000</td>\n      <td>172.000000</td>\n      <td>2700.000000</td>\n      <td>2007.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>39.500000</td>\n      <td>15.600000</td>\n      <td>190.000000</td>\n      <td>3550.000000</td>\n      <td>2007.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>44.500000</td>\n      <td>17.300000</td>\n      <td>197.000000</td>\n      <td>4050.000000</td>\n      <td>2008.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>48.600000</td>\n      <td>18.700000</td>\n      <td>213.000000</td>\n      <td>4775.000000</td>\n      <td>2009.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>59.600000</td>\n      <td>21.500000</td>\n      <td>231.000000</td>\n      <td>6300.000000</td>\n      <td>2009.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n### Visualização: Histograma\n\n::: {#add9f021 .cell execution_count=10}\n``` {.python .cell-code}\npenguins['body_mass_g'].plot(kind='hist', \n                            bins=5, \n                            edgecolor=\"white\")\nplt.title(\"Histograma da Massa Corporal\")\nplt.xlabel(\"Massa (g)\")\nplt.ylabel(\"Frequência\")\nplt.show()\nplt.close('all')\n```\n\n::: {.cell-output .cell-output-display}\n![](03_estatistica_descrtitiva_python_files/figure-html/cell-11-output-1.png){width=594 height=449}\n:::\n:::\n\n\n::: {.callout-tip}\n**Interpretando histogramas**:  \n- **Forma**: simétrica, assimétrica à esquerda/direita  \n- **Tendência central**: onde se concentram os dados  \n- **Dispersão**: quão espalhados estão os valores  \n:::\n\n## Quartis e Medidas de Posição\n\n### Quartis individuais\n\n::: {#7ddf07a5 .cell execution_count=11}\n``` {.python .cell-code}\npenguins['body_mass_g'].quantile(0.25)  # Q1\npenguins['body_mass_g'].quantile(0.50)  # Q2 (mediana)\npenguins['body_mass_g'].quantile(0.75)  # Q3\n```\n\n::: {.cell-output .cell-output-display execution_count=33}\n```\nnp.float64(4775.0)\n```\n:::\n:::\n\n\n### Múltiplos quantis\n\n::: {#1cebc51b .cell execution_count=12}\n``` {.python .cell-code}\npenguins['body_mass_g'].quantile([0.25, 0.5, 0.75])\n```\n\n::: {.cell-output .cell-output-display execution_count=34}\n```\n0.25    3550.0\n0.50    4050.0\n0.75    4775.0\nName: body_mass_g, dtype: float64\n```\n:::\n:::\n\n\n### Visualização: Boxplot\n\n::: {#2f9fa41b .cell execution_count=13}\n``` {.python .cell-code}\npenguins['body_mass_g'].plot(kind='box')\nplt.title(\"Boxplot da Massa Corporal\")\nplt.ylabel(\"Massa (g)\")\nplt.show()\nplt.close('all')\n```\n\n::: {.cell-output .cell-output-display}\n![](03_estatistica_descrtitiva_python_files/figure-html/cell-14-output-1.png){width=602 height=431}\n:::\n:::\n\n\n::: {.callout-note}\n**Interpretando boxplots**:  \n- **Linha central**: mediana (Q2)  \n- **Caixa**: do Q1 ao Q3 (50% dos dados centrais)  \n- **Whiskers**: extensão até ~1.5 × IQR  \n- **Pontos isolados**: possíveis outliers  \n:::\n\n## Medidas de Tendência Central\n\n::: {#862ddbaa .cell execution_count=14}\n``` {.python .cell-code}\npenguins['body_mass_g'].mean()    # Média aritmética\npenguins['body_mass_g'].median()  # Mediana\n```\n\n::: {.cell-output .cell-output-display execution_count=36}\n```\nnp.float64(4050.0)\n```\n:::\n:::\n\n\n::: {.callout-tip}  \n**Quando usar cada medida**:  \n- **Média**: dados simétricos, sem outliers extremos  \n- **Mediana**: dados assimétricos ou com outliers  \n:::\n\n## Medidas de Variação\n\n::: {#d9425ffb .cell execution_count=15}\n``` {.python .cell-code}\npenguins['body_mass_g'].std()   # Desvio padrão\npenguins['body_mass_g'].var()   # Variância\n```\n\n::: {.cell-output .cell-output-display execution_count=37}\n```\nnp.float64(648372.4876985418)\n```\n:::\n:::\n\n\n### Cálculo manual da variância\n\n::: {#b35e8205 .cell execution_count=16}\n``` {.python .cell-code}\nx = penguins['body_mass_g']\n# Fórmula: Σ(xi - x̄)² / (n-1)\nvariancia_manual = np.sum((x - x.mean())**2) / (len(x) - 1)\nprint(f\"Variância manual: {variancia_manual}\")\nprint(f\"Variância pandas: {x.var()}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nVariância manual: 648372.4876985418\nVariância pandas: 648372.4876985418\n```\n:::\n:::\n\n\n## Escore-Z (Padronização)\n\nA padronização transforma os dados para média = 0 e desvio padrão = 1:\n\n$$Z = \\frac{(X - \\mu)}{\\sigma}$$\n\n::: {#19a43396 .cell execution_count=17}\n``` {.python .cell-code}\nmedia = penguins['body_mass_g'].mean()\ndesvio_padrao = penguins['body_mass_g'].std()\n\npenguins['zscore_massa'] = (penguins['body_mass_g'] - media) / desvio_padrao\n```\n:::\n\n\n### Verificando a padronização\n\n::: {#1708a746 .cell execution_count=18}\n``` {.python .cell-code}\npenguins[['body_mass_g', 'zscore_massa']].head()\n```\n\n::: {.cell-output .cell-output-display execution_count=40}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>body_mass_g</th>\n      <th>zscore_massa</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3750.0</td>\n      <td>-0.567621</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3800.0</td>\n      <td>-0.505525</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3250.0</td>\n      <td>-1.188572</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>3450.0</td>\n      <td>-0.940192</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>3650.0</td>\n      <td>-0.691811</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#5e79e1fe .cell execution_count=19}\n``` {.python .cell-code}\npenguins[['body_mass_g', 'zscore_massa']].describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=41}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>body_mass_g</th>\n      <th>zscore_massa</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>333.000000</td>\n      <td>3.330000e+02</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>4207.057057</td>\n      <td>-8.535048e-17</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>805.215802</td>\n      <td>1.000000e+00</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>2700.000000</td>\n      <td>-1.871619e+00</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>3550.000000</td>\n      <td>-8.160012e-01</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>4050.000000</td>\n      <td>-1.950496e-01</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>4775.000000</td>\n      <td>7.053301e-01</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>6300.000000</td>\n      <td>2.599232e+00</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.callout-note} \n**Interpretação do Z-score**:  \n- **Z = 0**: valor igual à média  \n- **Z = 1**: um desvio padrão acima da média  \n- **Z = -1**: um desvio padrão abaixo da média  \n- **|Z| > 2**: valor considerado incomum  \n:::\n\n## Comparação Visual: Original vs Padronizado\n\n::: {#2c30279c .cell execution_count=20}\n``` {.python .cell-code}\nfig, axes = plt.subplots(2, 1, figsize=(8, 6))\n\n# Histograma da variável original\naxes[0].hist(penguins['body_mass_g'], bins=20, color='skyblue', edgecolor='black')\naxes[0].set_title(\"Massa Corporal (g) - Original\")\naxes[0].set_xlabel(\"Massa (g)\")\naxes[0].set_ylabel(\"Frequência\")\n\n# Histograma da variável padronizada\naxes[1].hist(penguins['zscore_massa'], bins=20, color='lightgreen', edgecolor='black')\naxes[1].set_title(\"Massa Corporal - Z-Score\")\naxes[1].set_xlabel(\"Escore-Z\")\naxes[1].set_ylabel(\"Frequência\")\n\nplt.tight_layout()\nplt.show()\nplt.close('all')\n```\n\n::: {.cell-output .cell-output-display}\n![](03_estatistica_descrtitiva_python_files/figure-html/cell-21-output-1.png){width=759 height=566}\n:::\n:::\n\n\n## Resumo das Medidas\n\n| **Medida** | **Função Python** | **Interpretação** |\n|------------|------------------|-------------------|\n| Média | `.mean()` | Valor central (sensível a outliers) |\n| Mediana | `.median()` | Valor central (robusta a outliers) |\n| Desvio Padrão | `.std()` | Dispersão dos dados |\n| Variância | `.var()` | Dispersão ao quadrado |\n| Q1, Q3 | `.quantile(0.25)`, `.quantile(0.75)` | Quartis |\n| Mínimo/Máximo | `.min()`, `.max()` | Valores extremos |\n\n## Aplicações Práticas\n\n### Identificando outliers com Z-score\n\n::: {#e5ffdf54 .cell execution_count=21}\n``` {.python .cell-code}\n# Valores com |Z| > 2 são considerados incomuns\noutliers = penguins[np.abs(penguins['zscore_massa']) > 2]\nprint(f\"Encontrados {len(outliers)} possíveis outliers\")\noutliers[['species', 'body_mass_g', 'zscore_massa']]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nEncontrados 9 possíveis outliers\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=43}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>species</th>\n      <th>body_mass_g</th>\n      <th>zscore_massa</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>165</th>\n      <td>Gentoo</td>\n      <td>5850.0</td>\n      <td>2.040376</td>\n    </tr>\n    <tr>\n      <th>167</th>\n      <td>Gentoo</td>\n      <td>5850.0</td>\n      <td>2.040376</td>\n    </tr>\n    <tr>\n      <th>169</th>\n      <td>Gentoo</td>\n      <td>6300.0</td>\n      <td>2.599232</td>\n    </tr>\n    <tr>\n      <th>185</th>\n      <td>Gentoo</td>\n      <td>6050.0</td>\n      <td>2.288757</td>\n    </tr>\n    <tr>\n      <th>229</th>\n      <td>Gentoo</td>\n      <td>6000.0</td>\n      <td>2.226661</td>\n    </tr>\n    <tr>\n      <th>231</th>\n      <td>Gentoo</td>\n      <td>5950.0</td>\n      <td>2.164566</td>\n    </tr>\n    <tr>\n      <th>263</th>\n      <td>Gentoo</td>\n      <td>5950.0</td>\n      <td>2.164566</td>\n    </tr>\n    <tr>\n      <th>267</th>\n      <td>Gentoo</td>\n      <td>5850.0</td>\n      <td>2.040376</td>\n    </tr>\n    <tr>\n      <th>269</th>\n      <td>Gentoo</td>\n      <td>6000.0</td>\n      <td>2.226661</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n### Comparação rápida entre variáveis\n\n::: {#79275a41 .cell execution_count=22}\n``` {.python .cell-code}\n# Estatísticas descritivas para múltiplas variáveis\ncolunas_numericas = ['bill_length_mm', 'bill_depth_mm', 'flipper_length_mm', 'body_mass_g']\npenguins[colunas_numericas].describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=44}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>bill_length_mm</th>\n      <th>bill_depth_mm</th>\n      <th>flipper_length_mm</th>\n      <th>body_mass_g</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>333.000000</td>\n      <td>333.000000</td>\n      <td>333.000000</td>\n      <td>333.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>43.992793</td>\n      <td>17.164865</td>\n      <td>200.966967</td>\n      <td>4207.057057</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>5.468668</td>\n      <td>1.969235</td>\n      <td>14.015765</td>\n      <td>805.215802</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>32.100000</td>\n      <td>13.100000</td>\n      <td>172.000000</td>\n      <td>2700.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>39.500000</td>\n      <td>15.600000</td>\n      <td>190.000000</td>\n      <td>3550.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>44.500000</td>\n      <td>17.300000</td>\n      <td>197.000000</td>\n      <td>4050.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>48.600000</td>\n      <td>18.700000</td>\n      <td>213.000000</td>\n      <td>4775.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>59.600000</td>\n      <td>21.500000</td>\n      <td>231.000000</td>\n      <td>6300.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "03_estatistica_descrtitiva_python_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}