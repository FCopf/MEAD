{
  "hash": "e9a1fdfa3ccc3ac444159a4c7d74400f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Gráficos em camadas\"\ndescription: \"Criação de gráficos em camadas com ```ggplot2```, incluindo histogramas, boxplots e gráficos de dispersão.\"\ncategories: [\n          \"Ciência de dados\",\n          \"R\",\n          \"Tidyverse\",\n          \"Visualização gráfica\"\n        ]\nimage: \"images/grafico_ggplot2.jpg\"\nexecute:\n  echo: true\n  warning: false\n  include: true\n  message: false\n---\n\n\n\nO pacote `ggplot2` no R é baseado na gramática de gráficos (Grammar of Graphics), que permite a construção de visualizações de dados de maneira declarativa. Com ele, é possível criar uma ampla variedade de gráficos, desde simples gráficos de barras e dispersão até complexas visualizações com múltiplas camadas e facetas. O `ggplot2` facilita a personalização detalhada dos gráficos, incluindo temas, cores e anotações, tornando-o uma escolha popular entre estatísticos, cientistas de dados e analistas para comunicar informações de maneira clara e eficiente.\n\nO `ggplot2` gera gráficos a partir das colunas de um data frame, o que significa que o domínio de ferramentas de transformação de data frames é fundamental para a criação de visualizações eficazes. Cada elemento do gráfico, como eixos, pontos, linhas e barras, é mapeado a partir das variáveis presentes no data frame. Isso permite grande flexibilidade na representação gráfica.\n\nA estrutura em camadas do `ggplot2` fornece uma base coesa e flexível para a codificação de gráficos. Por exemplo, é possível começar com uma camada base que define o sistema de coordenadas e os eixos, adicionar uma camada de pontos para criar um gráfico de dispersão, e então sobrepor camadas adicionais para ajustar a estética, adicionar linhas de tendência, ou incluir etiquetas. Essa abordagem em camadas facilita a personalização e a atualização dos gráficos, tornando o processo de criação de visualizações complexas mais organizado e intuitivo. Isso não só melhora a clareza e a legibilidade do código, mas também promove uma maior capacidade de experimentação e exploração dos dados, permitindo que analistas e pesquisadores ajustem e aprimorem suas visualizações de forma eficiente.\n\nAqui faremos uma introdução aos elementos princiais do `ggplot2`. Para saber mais verifique as referências abaixo:\n\n- [ggplot2 - tidyverse](https://ggplot2.tidyverse.org/)\n- [ggplot2: Elegant Graphics for Data Analysis (3e)](https://ggplot2-book.org/)\n\nInstale o pacote `gglot2` e carregue-o com os demais pacotes utilizados nessa seção. O pacote será adicionado para compor múltiplos gráficos em uma mesma figura.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"ggplot2\")\ninstall.packages(\"patchwork\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(patchwork)\nlibrary(readr)\nlibrary(dplyr)\nlibrary(tidyr)\n```\n:::\n\n\n\n\n## Histogramas\n\nFaça um histograma dos dados de vazão da tabela `HubbardBrook.csv` ([datasets](https://github.com/FCopf/datasets)).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhbrook <- read_csv(\"https://raw.githubusercontent.com/FCopf/datasets/refs/heads/main/HubbardBrook.csv\")\nhbrook\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 62 × 4\n    Year Treatment   Flow Precipitation\n   <dbl> <chr>      <dbl>         <dbl>\n 1  1958 Deforested  645.         1168.\n 2  1959 Deforested 1012.         1483.\n 3  1960 Deforested  825.         1321.\n 4  1961 Deforested  470.          980.\n 5  1962 Deforested  777.         1232.\n 6  1963 Deforested  774.         1139.\n 7  1964 Deforested  712.         1175.\n 8  1965 Deforested  599.         1115.\n 9  1966 Deforested 1189.         1222.\n10  1967 Deforested 1132.         1315.\n# ℹ 52 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = hbrook, mapping = aes(x = Flow)) +\n  geom_histogram(color = \"blue\", fill = \"lightblue\")\n```\n\n::: {.cell-output-display}\n![](grafico_ggplot2_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\nO comando acima contém duas camadas, separadas pelo símbolo `+`, que indica o fim de uma camada e o início de outra. No `ggplot2`, cada camada adiciona ou formata um elemento do gráfico. A ordem das camadas geralmente não importa, mas organizá-las bem facilita a leitura do código. No exemplo, temos:\n\n1. Função `ggplot()`: Define a estrutura básica do gráfico. O argumento `data =` especifica o data frame que contém os dados. O argumento `mapping =` define a **estética do gráfico** definida pela função `aes(x = Flow)`, indicando que o eixo $x$ representará a variável `Flow`.\n\n2. Função `geom_histogram()`: Define a geometria do gráfico, aqui um histograma. A cor da borda é definida por `color = \"blue\"` e o preenchimento por `fill = \"lightblue\"`.\n\nFormatações adicionais:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = hbrook, mapping = aes(x = Flow)) +\n  geom_histogram(color = \"blue\", fill = \"lightblue\") +\n  labs(title = \"Histograma de vazão\", \n       x = bquote(Vazao (m^3/s)),\n       y = \"Contagem\") +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](grafico_ggplot2_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\nUm título foi inserido, os nomes para os eixos $x$ e $y$ foram definidos e o título foi centralizado por `theme(plot.title = element_text(hjust = 0.5))`.\n\nO histograma anterior, combina dados de vazão anual na bacia `Deforested` e `Reference`, identificadas pela variável `Treatment`. Para verificar histogramas separados de acordo com os níveis desta variável podemos usar a função `facet_grid()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = hbrook, mapping = aes(x = Flow)) +\n  geom_histogram(color = \"blue\", fill = \"lightblue\") +\n  labs(title = \"Histograma de vazão\", \n       x = bquote(Vazao (m^3/s)),\n       y = \"Contagem\") +\n  theme(plot.title = element_text(hjust = 0.5)) +\n  facet_grid(rows = vars(Treatment))\n```\n\n::: {.cell-output-display}\n![](grafico_ggplot2_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n::: {.callout-note}\n\n## Outras geometrias gráficas\n\nAlém dos histogramas, existem muitas outras geometrias gráficas do tipo geom_NOME(). Algumas das mais utilizadas são: `geom_abline()`, `geom_bar()`, `geom_boxplot()`, `geom_line()`, `geom_point()`, `geom_smooth()`, `geom_text()`, entre muitas outras.\n\n:::\n\n## Boxplots\n\nA princípio, a distribuição das vazões não são muito diferentes entre os tratamentos. Um boxplot pode ser utilizado para visualizar estas distribuições.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = hbrook, mapping = aes(y = Flow, x = Treatment)) +\n  geom_boxplot() +\n  labs(y = bquote(Vazao (m^3/s)),\n       x = \"\")\n```\n\n::: {.cell-output-display}\n![](grafico_ggplot2_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\nO boxplot exige que sejam definidas uma variável contínua, neste caso `Flow` em $y$ como função de uma variável categórica, neste caso `Treatment` em $x$.\n\n## Gráfico de dispersão\n\nPara verificar a relação entre vazão e precipitação, pode-se plotar um gráfico de dispersão entre `Flow` e `Precipitation`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = hbrook, mapping = aes(y = Flow, x = Precipitation)) +\n  geom_point(shape = 21) +\n  labs(y = bquote(Vazão (m^3/s)),\n       x = bquote(Precipitação (m^3/ano)))\n```\n\n::: {.cell-output-display}\n![](grafico_ggplot2_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\nO `Treatment` pode ser adicinado a esta figura como cores diferentes.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = hbrook, \n       mapping = aes(y = Flow, \n                     x = Precipitation, \n                     fill = Treatment)) +\n  geom_point(shape = 21, size = 3) +\n  labs(y = bquote(Vazão (m^3/s)),\n       x = bquote(Precipitação (m^3/ano))) +\n  guides(fill=guide_legend(title=\"Estado da área\")) +\n  scale_fill_manual(values = c(\"blue\", \"green\"))\n```\n\n::: {.cell-output-display}\n![](grafico_ggplot2_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n## Séries temporais\n\nO operador pipe pode ser combinado com a função `ggplot()` para filtrar as bacia `Deforested` e representar a vazão em uma série temporal.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhbrook |>  \n  filter(Treatment == \"Deforested\") |>  \n  ggplot(mapping = aes(y = Flow, x = Year)) +\n    geom_line() +\n    labs(y = bquote(Vazão (m^3/s)),\n         x = \"Ano\")\n```\n\n::: {.cell-output-display}\n![](grafico_ggplot2_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\nPodem ser vistas as séries temporais para os dois tratamentos, representando-os em figuras diferentes.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = hbrook, mapping = aes(y = Flow, x = Year)) +\n  geom_line() +\n  labs(y = bquote(Vazão (m^3/s)),\n       x = \"Ano\") +\n  facet_grid(rows = vars(Treatment))\n```\n\n::: {.cell-output-display}\n![](grafico_ggplot2_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\nOu na mesma figura em cores diferentes.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = hbrook, \n       mapping = aes(y = Flow, x = Year, color = Treatment)) +\n  geom_line() +\n  labs(y = bquote(Vazão (m^3/s)),\n       x = \"Ano\") +\n  scale_color_manual(values = c(\"blue\", \"green\"))\n```\n\n::: {.cell-output-display}\n![](grafico_ggplot2_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\nO desmatamento da bacia `Deforested` ocorreu em $1965$, e intervenções para impedir o desenvolvimento da vegetação foram realizadas até $1970$. Esse intervalo pode ser representado por um retângulo no gráfico.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = hbrook, \n       mapping = aes(y = Flow, x = Year, color = Treatment)) +\n  geom_line() +\n  labs(y = bquote(Vazão (m^3/s)),\n       x = \"Ano\") +\n  scale_color_manual(values = c(\"blue\", \"green\")) +\n  scale_x_continuous(breaks = seq(1955, 1990, by = 5)) +\n  annotate(\"rect\", \n           xmin = 1965, xmax = 1970, \n           ymin = -Inf, ymax = Inf, \n           alpha = 0.2, fill = \"red\") +\n  theme_test()\n```\n\n::: {.cell-output-display}\n![](grafico_ggplot2_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\nComo as vazões foram mensuradas nos mesmos anos, é possível calcular a diferença de vazão entre os tratamentos e representar essas diferenças graficamente.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhbrook_largo <- hbrook |>\n  select(-Precipitation) |>\n  pivot_wider(names_from = Treatment, values_from = Flow) |> \n  mutate(diffDR = Deforested - Reference)\nhbrook_largo\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 31 × 4\n    Year Deforested Reference diffDR\n   <dbl>      <dbl>     <dbl>  <dbl>\n 1  1958       645.      567.   77.8\n 2  1959      1012.      918.   93.8\n 3  1960       825.      752.   73.2\n 4  1961       470.      436.   33.8\n 5  1962       777.      699.   78.0\n 6  1963       774.      663.  111. \n 7  1964       712.      630.   81.7\n 8  1965       599.      547.   52.2\n 9  1966      1189.      727.  463. \n10  1967      1132.      781.  351. \n# ℹ 21 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = hbrook_largo, \n       mapping = aes(y = diffDR, x = Year)) +\n  geom_line() +\n  geom_point(shape = 19) +\n  labs(y = bquote(Diferença~de~Vazão (m^3/s)),\n       x = \"Ano\") +\n  scale_x_continuous(breaks = seq(1955, 1990, by = 5)) +\n  annotate(\"rect\", \n           xmin = 1965, xmax = 1970, \n           ymin = -Inf, ymax = Inf, \n           alpha = 0.2, fill = \"red\") +\n  theme_test()\n```\n\n::: {.cell-output-display}\n![](grafico_ggplot2_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n## Gráfico de barras\n\nSerá criada uma variável categórica `Vazao_cat` contendo os níveis `Extrema` (se `Flow >= 1000 m^3/s`) e `Normal` caso contrário. Em seguida, será contado o número de observações com vazão extrema.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nextremo <- 1000\n\nhbrook2 <- hbrook  |>\n  mutate(Vazao_cat = if_else(Flow >= extremo, \n                             true = \"Extrema\", \n                             false = \"Normal\"))\n\nggplot(data = hbrook2, mapping = aes(x = Vazao_cat)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](grafico_ggplot2_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n\nSe a variável estiver no eixo $y$, `aes(y = Vazao_cat)`, o gráfico será desenhado na horizontal.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = hbrook2, mapping = aes(y = Vazao_cat)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](grafico_ggplot2_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n## Temas no `ggplot2`\n\nO `ggplot2` oferece uma série de temas pré-formatados para facilitar a personalização dos gráficos. Para aplicar um tema, basta adicionar uma camada com o nome do tema desejado usando `theme_NOME()`. Veja um exemplo com o tema `theme_classic()`:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(hbrook, mapping = aes(x = Year, y = Flow, color = Treatment)) +\n  geom_line() +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](grafico_ggplot2_files/figure-html/unnamed-chunk-18-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n\nOs temas básicos disponíveis no ggplot2 incluem:\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ng1 <- ggplot(hbrook, mapping = aes(x = Year, y = Flow, color = Treatment)) +\n  geom_line() +\n  theme_grey() +\n  labs(title = \"theme_grey()\")\n\ng2 <- ggplot(hbrook, mapping = aes(x = Year, y = Flow, color = Treatment)) +\n  geom_line() +\n  theme_gray() +\n  labs(title = \"theme_gray()\")\n\ng3 <- ggplot(hbrook, mapping = aes(x = Year, y = Flow, color = Treatment)) +\n  geom_line() +\n  theme_bw() +\n  labs(title = \"theme_bw()\")\n\ng4 <- ggplot(hbrook, mapping = aes(x = Year, y = Flow, color = Treatment)) +\n  geom_line() +\n  theme_linedraw() +\n  labs(title = \"theme_linedraw()\")\n\ng5 <- ggplot(hbrook, mapping = aes(x = Year, y = Flow, color = Treatment)) +\n  geom_line() +\n  theme_light() +\n  labs(title = \"theme_light()\")\n\ng6 <- ggplot(hbrook, mapping = aes(x = Year, y = Flow, color = Treatment)) +\n  geom_line() +\n  theme_dark() +\n  labs(title = \"theme_dark()\")\n\ng7 <- ggplot(hbrook, mapping = aes(x = Year, y = Flow, color = Treatment)) +\n  geom_line() +\n  theme_minimal() +\n  labs(title = \"theme_minimal()\")\n\ng8 <- ggplot(hbrook, mapping = aes(x = Year, y = Flow, color = Treatment)) +\n  geom_line() +\n  theme_classic() +\n  labs(title = \"theme_classic()\")\n\ng9 <- ggplot(hbrook, mapping = aes(x = Year, y = Flow, color = Treatment)) +\n  geom_line() +\n  theme_void() +\n  labs(title = \"theme_void()\")\n\ng10 <- ggplot(hbrook, mapping = aes(x = Year, y = Flow, color = Treatment)) +\n  geom_line() +\n  theme_test() +\n  labs(title = \"theme_test()\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ngcol1 <- g1 / g2 / g3 / g4 / g5\ngcol2 <- g6 / g7 / g8 / g9 / g10\n\ngcol1 | gcol2\n```\n\n::: {.cell-output-display}\n![](grafico_ggplot2_files/figure-html/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n\n\n\n\n## Salvando uma figura gerada pelo `gglot2`.\n\nPara salvar um gráfico gerado com `ggplot2`, utiliza-se a função `ggsave()`. Veja o exemplo abaixo:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(hbrook, mapping = aes(x = Year, y = Flow, color = Treatment)) +\n  geom_line() +\n  theme_classic()\n\nggsave(filename = \"Exemplo_ggsave.png\", \n       width = 20, height = 20, units = \"cm\")  \n```\n:::\n\n\n\nPor padrão, a função `ggsave()` salva o último gráfico criado. Caso seja necessário salvar um gráfico específico, pode-se usar o argumento `plot = objeto_grafico`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nobjeto_grafico <- ggplot(hbrook, mapping = aes(x = Year, y = Flow, color = Treatment)) +\n  geom_line() +\n  theme_classic()\n\nggsave(filename = \"objeto_grafico_plt.png\", \n       plot = objeto_grafico,\n       device = \"png\",\n       width = 20, \n       height = 20,\n       units = \"cm\",\n       dpi = 480)  \n```\n:::\n\n::: {.cell}\n\n:::",
    "supporting": [
      "grafico_ggplot2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}