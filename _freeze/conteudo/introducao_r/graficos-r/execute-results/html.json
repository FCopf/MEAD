{
  "hash": "e0da41c2304f0ab60f06334a413bf7c7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"(Básico da) Visualização gráfica\"\ndescription: \"Introdução à criação de gráficos em R: gráficos de barras, histogramas, boxplots, dispersão e exportação de figuras.\"\ncategories: [\n          \"R\",\n          \"Programação\",\n          \"Gráficos em R\",\n          \"Visualização de dados\"\n        ]\nimage: \"images/graficos-r.jpg\"\nformat: \n  html:\n    fig-width: 5\n    fig-height: 5\n    fig-align: 'center'\nexecute:\n  echo: true\n  warning: false\n  include: true\n  message: false\n---\n\n\n\n\n\nA visualização gráfica consiste em representar visualmente os padrões de distribuição de uma variável ou a associação entre duas ou mais variáveis. Os tipos de gráficos utilizados dependem do tipo de variável (categórica ou numérica) e do número de variáveis envolvidas. Temos gráficos **univariados** para uma única variável, gráficos **bivariados** para associação entre duas variáveis e gráficos **multivariados** para mais de duas variáveis.\n\nAs funções gráficas discutidas nesta seção estão disponíveis no pacote `graphics`, que vem instalado por padrão no R, não sendo necessário instalar pacotes adicionais. Essas funções oferecem elevado controle sobre elementos gráficos (fontes, tamanhos, cores), mas podem ser complexas para criar figuras elaboradas. Apesar de muitas nomenclaturas serem compatíveis para o controle de eixos, títulos e tamanhos de fonte, os argumentos nem sempre são coesos entre os diferentes tipos de gráficos, o que pode dificultar o aprendizado. No entanto, essas funções fornecem uma base sólida sobre a estrutura gráfica no R, permitindo resolver rapidamente muitas situações do dia a dia da análise exploratória.\n\n## Doubs river dataset\n\nPara demonstrar algumas ferramentas gráficas, será utilizado o conjunto de dados *Doubs River data*, disponível no pacote `ade4` [@dray2015ade]. Esse conjunto de dados foi apresentado na seção anterior sobre manipulação de data frames, onde foi importado o arquivo [dbenv.csv](https://raw.githubusercontent.com/FCopf/datasets/refs/heads/main/dbenv.csv). Agora, será usado o conjunto de dados completo.\n\nO conjunto de dados do [Rio Doubs](https://pt.wikipedia.org/wiki/Rio_Doubs) [@verneaux1973] consiste de amostras sequenciais da cabeceira à foz do rio, em condições que variam de águas bem oxigenadas e oligotróficas a águas eutróficas e desprovidas de oxigênio. O conjunto de dados é uma lista com quatro data frames:\n\n1.  `$env`: data frame com variáveis ambientais relacionadas à hidrologia, geomorfologia e química do\n\n2.  `$fish`: data frame com abundâncias das espécies de peixes capturadas nos locais de amostragem.\n\n3.  `$xy`: data frame com coordenadas geográficas de cada ponto de amostragem.\n\n4.  `$species`: data frame com os nomes científicos, populares em francês e inglês, e códigos abreviados das espécies capturadas.\n\n### Instalando o pacote `ade4` e carregando os dados\n\n1.  Instale o pacote `ade4`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"ade4\")\n```\n:::\n\n\n\n2.  Carregue o pacote:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ade4)\n```\n:::\n\n\n\n3.  Habilite o conjunto de dados `doubs`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(doubs)\n```\n:::\n\n\n\n4.  Confira se consiste de uma lista:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(doubs)\nstr(doubs)\n```\n:::\n\n\n\n5.  Leia a descrição do conjunto de dados para conchecê-lo melhor.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n?doubs\n```\n:::\n\n\n\n6.  Extraia os dados ambientais para um novo `data.frame`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nambiente <- doubs$env\n```\n:::\n\n\n\n7.  Adicione a este data frame uma nova variável categórica denominada `secao` com quatro níveis [@borcard2018numerical].\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nambiente$secao <- c(rep(\"Seção 1\", 16), rep(\"Seção 4\", 14))\nambiente$secao[c(5,9,17)] <- \"Seção 2\"\nambiente$secao[23:25] <- \"Seção 3\"\nambiente$secao <- factor(ambiente$secao)\n```\n:::\n\n\n\n8.  Adicione outra variável categórica, indicando três níveis de saturação de oxigênio em cada ponto.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nambiente$saturacao <- cut(ambiente$oxy, breaks = c(0, 80, 109, 124), \n           labels = c(\"Pobre\", \"Médio\", \"Saturado\"))\nhead(ambiente, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   dfs alt   slo  flo pH har pho nit amm oxy bdo   secao saturacao\n1    3 934 6.176   84 79  45   1  20   0 122  27 Seção 1  Saturado\n2   22 932 3.434  100 80  40   2  20  10 103  19 Seção 1     Médio\n3  102 914 3.638  180 83  52   5  22   5 105  35 Seção 1     Médio\n4  185 854 3.497  253 80  72  10  21   0 110  13 Seção 1  Saturado\n5  215 849 3.178  264 81  84  38  52  20  80  62 Seção 2     Pobre\n6  324 846 3.497  286 79  60  20  15   0 102  53 Seção 1     Médio\n7  268 841 4.205  400 81  88   7  15   0 111  22 Seção 1  Saturado\n8  491 792 3.258  130 81  94  20  41  12  70  81 Seção 1     Pobre\n9  705 752 2.565  480 80  90  30  82  12  72  52 Seção 2     Pobre\n10 990 617 4.605 1000 77  82   6  75   1 100  43 Seção 1     Médio\n```\n\n\n:::\n:::\n\n\n\n## Descrevendo os padrões de uma variável\n\n### Gráfico de barras\n\nUm gráfico de barras é utilizado para verificar a contagem de cada nível de uma *variável categórica*. Faça um gráfico de barras para a variável `saturacao`.\n\nInicialmente, monte uma tabela de frequencia:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntab1 <- table(ambiente$saturacao)\ntab1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n   Pobre    Médio Saturado \n       8       14        8 \n```\n\n\n:::\n:::\n\n\n\nEm seguida represente-a em um gráfico de barras:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbarplot(tab1)\n```\n\n::: {.cell-output-display}\n![](graficos-r_files/figure-html/unnamed-chunk-11-1.png){width=480}\n:::\n:::\n\n\n\nAdicionando elementos de formatação gráfica:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbarplot(tab1,\n        main = \"Concentração de oxigênio\",\n        ylab = \"Frequência\",\n        ylim = c(0, 18), col = \"black\")\nbox()\n```\n\n::: {.cell-output-display}\n![](graficos-r_files/figure-html/unnamed-chunk-12-1.png){width=480}\n:::\n:::\n\n\n\n### Histograma\n\nUm histograma descreve o padrão de distribuição de uma variável quantitativa a partir da divisão desta variável em *intervalos de classe*.\n\nO histograma abaixo para a coluna oxy expressa a saturação de oxigênio (mg/l $\\times$ 10).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(ambiente$oxy)\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](graficos-r_files/figure-html/unnamed-chunk-14-1.png){width=480}\n:::\n:::\n\n\n\nNo histograma, o intervalo de classes determina o formato exato do gráfico. No exemplo acima, a escolha foi feita automaticamente. No entanto, é possível definir o intervalo desejado com o argumento `breaks`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclasses <- seq(40, 140, by = 20)\nhist(ambiente$oxy, breaks = classes)\n```\n\n::: {.cell-output-display}\n![](graficos-r_files/figure-html/unnamed-chunk-15-1.png){width=480}\n:::\n:::\n\n\n\nA divisão foi feita em intervalos de tamanho 20, iniciando em 40 e terminando em 140. A escolha deve ser a que evidencie da melhor forma possível o padrão de distribuição da variável.\n\n### Boxplot\n\nBoxplots oferecem um *resumo gráfico* da distribuição de uma variável quantitativa. Abaixo está representada a variável oxy.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot(ambiente$oxy)\n```\n\n::: {.cell-output-display}\n![](graficos-r_files/figure-html/unnamed-chunk-16-1.png){width=480}\n:::\n:::\n\n\n\nA linha do meio representa a **mediana** da variável, enquanto os limites das caixas representam o $1^o$ e $3^o$ quartis e as linhas externas representam os pontos mínimo e máximo. Estes limites podem ser obtidos com o comando:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nquantile(ambiente$oxy, probs = c(0, 0.25, 0.5, 0.75, 1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    0%    25%    50%    75%   100% \n 41.00  80.25 102.00 109.00 124.00 \n```\n\n\n:::\n:::\n\n\n\n## Associação entre duas variáveis\n\n### Gráfico de barras\n\nUm gráfico de barras pode combinar duas variáveis categóricas como `secao` e `saturacao`. Inicialmente, monta-se uma tabela de frequência, combinandos as contagens para cada nível das variáveis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntab2 <- table(ambiente[,c(\"secao\", \"saturacao\")])\ntab2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         saturacao\nsecao     Pobre Médio Saturado\n  Seção 1     1     5        8\n  Seção 2     2     1        0\n  Seção 3     3     0        0\n  Seção 4     2     8        0\n```\n\n\n:::\n:::\n\n\n\nNeste caso, é possível representar estas contagens de diferentes formas:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlayout(mat = matrix(1:4, nrow = 2, ncol = 2, byrow = TRUE))\nbarplot(tab2, legend = TRUE)\nbarplot(tab2, legend = TRUE, beside = TRUE)\nbarplot(t(tab2), legend = TRUE)\nbarplot(t(tab2), legend = TRUE, beside = TRUE)\n```\n\n::: {.cell-output-display}\n![](graficos-r_files/figure-html/unnamed-chunk-19-1.png){width=768}\n:::\n:::\n\n\n\n1.  A função `layout(mat = matrix(1:4, nrow = 2, ncol = 2, byrow = TRUE))` organiza o espaço gráfico em um formato matricial com 2 linhas por 2 colunas, permitindo a inserção de 4 figuras. O argumento `byrow = TRUE` define que as figuras serão adicionais linha-a-linha.\n\n2.  A função `t()` *transpõe* a tabela, o que consequentemente altera a referência da figura. No primeiro caso, a concentração de oxigênio é a variável principal e, no segundo caso, são as seções.\n\n3.  O argumento `beside = TRUE` faz com que as barras apareçam lado-a-lado e `beside = FALSE` resulta em cada barra representa a variável principal subdividida nos níveis da variável secubdária.\n\n4.  Em todos os gráficos foi adicionada uma legenda.\n\nAdiocionando elementos de formatação:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncores <- 1:4\nlimy1 <- c(0, 17)\nlimy2 <- c(0, 16)\nlegenda <- list(cex = 0.8)\n\nlayout(mat = matrix(1:4, nrow = 2, ncol = 2, byrow = TRUE))\nbarplot(tab2, legend = TRUE, col = cores, ylim = limy1, \n        args.legend = legenda)\nbox()\nbarplot(tab2, legend = TRUE, beside = TRUE, col = cores, \n        ylim = limy1, args.legend = legenda)\nbox()\nbarplot(t(tab2), legend = TRUE, col = cores, ylim = limy2, \n        args.legend = legenda)\nbox()\nbarplot(t(tab2), legend = TRUE, beside = TRUE, col = cores, \n        ylim = limy2, args.legend = legenda)\nbox()\n```\n\n::: {.cell-output-display}\n![](graficos-r_files/figure-html/unnamed-chunk-20-1.png){width=768}\n:::\n:::\n\n\n\n### Boxplot\n\nO boxplot também pode ser utilizado para representar uma variável $X_1$ para diferentes níveis de uma variável categórica $X_2$, por exemplo oxy para cada nível de secao.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot(oxy ~ secao, data = ambiente)\n```\n\n::: {.cell-output-display}\n![](graficos-r_files/figure-html/unnamed-chunk-21-1.png){width=480}\n:::\n:::\n\n\n\nOs pontos associados à `Seção 1` têm maiores concentrações de oxigênio (mediana = 110.5) e que os pontos associados à `Seção 3` (mediana = 52).\n\nNa função `boxplot` foi utilizada a representação de *fórmula* no R (`y ~ x`) em que a variável no eixo `y` *depende de* `x`. Esta notação é amplamente utilizada em modelos estatísticos (ex. regressão linear, e análise de variância, etc.).\n\n2.  Ao invés de acessar a variável por `ambiente$oxy`, utilizou-se o nome da coluna (`oxy`) e adicionou-se o argumento `data = ambiente` para indicar em qual data frame a função irá buscar as variáveis.\n\n### Gráfico de dispersão\n\nUm gráfico de dispersão mostra a associação entre duas variáveis quantitativas, por exemplo, concentração de nitrato (mg/l $\\times$ 100) e distância da foz (km $\\times$ 10). Neste caso a concentração de nitrato será representada como dependente da distância da foz.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(nit ~ dfs, data = ambiente)\n```\n\n::: {.cell-output-display}\n![](graficos-r_files/figure-html/unnamed-chunk-22-1.png){width=480}\n:::\n:::\n\n\n\nOs resultados expressam uma relação em que a concentração de nutrientes aumenta à medida que distancia-se da foz.\n\nAdicionando formatação gráfica: nomes dos eixos (argumentos `xlab` e `ylab`) e tipo de ponto (argumento `pch`).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(nit ~ dfs, data = ambiente,\n     xlab = bquote(\"Vazão média mínima (m\" ^3/\"seg x 100)\"),\n     ylab = bquote(\"Concentração de Nitrato (mg\"/\"l x 100)\"),\n     pch = 19\n)\n```\n\n::: {.cell-output-display}\n![](graficos-r_files/figure-html/unnamed-chunk-23-1.png){width=480}\n:::\n:::\n\n\n\n## Compreendendo o ambiente por meio de suas variáveis\n\nUm dos objetivo da descrição gráfica é representar o sistema por meio das variáveis escolhidas para quantificá-lo. Além dos gráficos apresentados anteriormente, há outras formas de incorporar essas variáveis em uma figura, utilizando cores, símbolos e textos no ambiente gráfico. Nesta seção, serão exploradas algumas possibilidades.\n\nOs pontos de amostragem foram obtidos ao longo do gradiente cabeceira-foz. As informações incluem as coordenadas geográficas desses pontos (no data frame `$xy`). A sequência dos pontos segue uma ordem crescente de distância da foz. Inicialmente, serão plotadas as coordenadas geográficas de todos os pontos utilizando um gráfico de linhas.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(x = doubs$xy$x, y = doubs$xy$y, type = \"l\",\n     xlab = \"Coordenada em x (km)\", \n     ylab = \"Coordenada em y (km)\",\n     col = \"#4287f5\", lwd = 3)\n```\n\n::: {.cell-output-display}\n![](graficos-r_files/figure-html/unnamed-chunk-24-1.png){width=576}\n:::\n:::\n\n\n\nCompare a figura com o desenho do [rio Doubs](https://pt.wikipedia.org/wiki/Rio_Doubs).\n\n::: callout-note\nUtilizamos a definição de cores em **HEXADECIMAL**. Você pode fazer o mesmo, escolhendo a cor desejada aqui: [hex color picker](https://www.google.com/search?q=hex+color+picker&oq=hex+color+picker&aqs=chrome..69i57j0l7.11304j0j4&sourceid=chrome&ie=UTF-8).\n:::\n\nRepresentando os pontos de amostragem.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npontos_extremos <- doubs$xy[which(doubs$env$dfs == min(doubs$env$dfs) | \n                                      doubs$env$dfs == max(doubs$env$dfs)),]\nplot(x = doubs$xy$x, y = doubs$xy$y, type = \"l\",\n     xlab = \"Coordenada em x (km)\", \n     ylab = \"Coordenada em y (km)\",\n     col = \"#4287f5\", lwd = 3)\ntext(x = pontos_extremos$x, \n       y = pontos_extremos$y,\n       labels = c(\"Cabeceira\", \"Foz\"))\n```\n\n::: {.cell-output-display}\n![](graficos-r_files/figure-html/unnamed-chunk-25-1.png){width=576}\n:::\n:::\n\n\n\nRepresentando as $4$ seções do rio.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsecao_cor <- as.numeric(ambiente$secao)\n\nplot(x = doubs$xy$x, y = doubs$xy$y, type = \"l\",\n     xlab = \"Coordenada em x (km)\", \n     ylab = \"Coordenada em y (km)\",\n     col = \"#4287f5\", lwd = 3)\npoints(x = doubs$xy$x, y = doubs$xy$y, pch = 21, \n       bg = secao_cor, cex = 3)\nlegend(x = \"bottomright\", col = 1:4, \n       legend = levels(ambiente$secao), bty = \"n\", pch = 19)\n```\n\n::: {.cell-output-display}\n![](graficos-r_files/figure-html/unnamed-chunk-26-1.png){width=576}\n:::\n:::\n\n\n\nRepresentando a concentração de amônia (`amm`).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsecao_cor <- as.numeric(ambiente$secao) + 1\n\nplot(x = doubs$xy$x, y = doubs$xy$y, type = \"l\",\n     xlab = \"Coordenada em x (km)\", \n     ylab = \"Coordenada em y (km)\",\n     col = \"#4287f5\", lwd = 3)\npoints(x = doubs$xy$x, y = doubs$xy$y, pch = 21, \n       bg = secao_cor, cex = 4)\nlegend(x = \"bottomright\", col = 1:4, \n       legend = levels(ambiente$secao), bty = \"n\", pch = 19)\ntext(x = doubs$xy$x, y = doubs$xy$y, labels = doubs$env$amm, \n     cex = 0.8, font = 2)\ntext(x = 55, y = 220, labels = \"Concentração de amônia\")\ntext(x = 25, y = 120, label = \"Foz\")\ntext(x = 60, y = 20, label = \"Cabeceira\")\n```\n\n::: {.cell-output-display}\n![](graficos-r_files/figure-html/unnamed-chunk-27-1.png){width=576}\n:::\n:::\n\n\n\nA figura nos informa sobre a distribuição espacial da concentração de amônia entre as seções. Verifica-se que a concentração de amônia é mais nas seções $4$ e $3$.\n\n::: callout-note\nUtilizamos uma série de funções novas: `text`, `points`, `legend`. Para entender como elas funcionam, rode os comandos acima **linha por linha** e veja como cada função adiciona uma informação adicional à figura.\n:::\n\n## Outros argumentos de formatação gráfica\n\nA capacidade de formatação gráfica no R é extensa e qualquer tentativa de resumí-las seria incompleta. Abaixo exemplificam alguns argumentos comuns de formatação gráfica.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(nit ~ dfs, data = ambiente)\nplot(nit ~ dfs, data = ambiente, pch = 2)\nplot(nit ~ dfs, data = ambiente, pch = 19)\nplot(nit ~ dfs, data = ambiente, pch = 19, type = \"b\")\nplot(nit ~ dfs, data = ambiente, pch = 19, type = \"b\",\n     xlab = \"Nitrato\", ylab = \"Vazão\")\nplot(nit ~ dfs, data = ambiente, pch = 19, type = \"b\", \n     xlab = \"Nitrato\", ylab = \"Vazão\", font.lab = 3)\nplot(nit ~ dfs, data = ambiente, pch = 19, type = \"l\", \n     lty = 2)\nplot(nit ~ dfs, data = ambiente, pch = 19, type = \"l\", \n     lty = 2, lwd = 3)\nplot(nit ~ dfs, data = ambiente, pch = 19, type = \"l\", \n     lty = 2, lwd = 3, col = 2)\n```\n:::\n\n\n\n## Figuras compostas\n\nUma das formas mais simples para inserir múltiplas figuras no mesmo espaço gráfico é por meio da função `layout`. Abaixo, serõ inseridos $6$ gráficos em uma espaço de $3$ colunas por $2$ linhas.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlayout(mat = matrix(1:6, nrow = 3, ncol = 2))\nplot(alt ~ dfs, data = ambiente)\nplot(amm ~ alt, data = ambiente)\nplot(nit ~ alt, data = ambiente)\nplot(pH ~ alt, data = ambiente)\nplot(bdo ~ alt, data = ambiente)\nplot(oxy ~ alt, data = ambiente)\n```\n\n::: {.cell-output-display}\n![](graficos-r_files/figure-html/unnamed-chunk-29-1.png){width=480}\n:::\n:::\n\n\n\n## Exportando figuras: funções `png`, `tiff`, `jpeg` e `bmp`\n\nÉ possível exportar figuras em diversos formatos e resoluções. A função `png` é exemplificada abaixo. As funções para exportar em outros formatos são similares.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(filename = \"Exemplo_figura.png\",\n    width = 15, height = 15, units = \"cm\", \n    pointsize = 10, bg = \"white\", res = 800)\n\nplot(alt ~ dfs, data = ambiente, pch = 19, type = \"b\", \n     xlab = \"Vazão\", ylab = \"Elevação\")\n\ndev.off()\n```\n:::\n\n\n\nA figura foi salva do diretório atual de sua seção de trabalho. Você pode conferir este diretório com o comando:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngetwd()\n```\n:::\n\n\n\nExperimente alterar os argumentos `width`, `height`, `pointsize`, `units` (com `\"px\"`, `\"in\"`, `\"cm\"` ou `\"mm\"`) e `res`.\n\nAs capacidades gráficas no R incluem ainda muitos outros argumentos. Alguns deles são: cores (`col`), tipos da fonte (`font`), tamanhos de símbolos (`cex`), dos labels (`cex.lab`), dos rótulos dos eixos (`cex.axis`), título (`main`), etc. Pode-se ainda inserir legendas (função `legend`) e textos (função `text`). Veja o **help** de cada uma destas funções e a lista de argumentos possíveis para o ambiente gráfico do R em `?par`. Veja também uma demonstração com `demo(graphics)`, `demo(image)`, `demo(persp)` e `demo(plotmath)`.\n\nExistem diversos outros pacotes gráficos além do `graphics`:\n\n-   `ggplot2`\n-   `ggvis`\n-   `Lattice`\n-   `highcharter`\n-   `Leaflet`\n-   `RColorBrewer`\n-   `Plotly`\n-   `sunburstR`\n-   `RGL`\n-   `dygraphs`\n\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "graficos-r_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}